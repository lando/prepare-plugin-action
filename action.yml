name: 'Prepare Lando Plugin'
description: 'Prepare a Lando plugin for publishing to a package registry.'
inputs:
  tags:  # id of input
    description: 'The new tag of the plugin to be published.'
    required: false
    default: ${{ github.event.release.tag_name }}
  git-username:
    description: 'Username used when committing the newly bumped version of the plugin.'
    required: false
    default: 'github-actions'
  git-email:
    description: 'Email used when committing the newly bumped version of the plugin.'
    required: false
    default: 'github-actions@github.com'
  validate-plugin:
    description: 'Whether to validate the checked out code as a Lando plugin.'
    required: false
    default: true
  bundle-deps: 
    description: 'Whether to bundle-dependencies.'
    required: false
    default: true
  pjson-location:
    description: 'Location of package.json for the project to be prepared.'
    required: false
    default: ${{ github.workspace }}/package.json
  
runs:
  using: "composite"
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Validate package.json
      uses: actions/github-script@v6
      env:
        PJSON_LOCATION: ${{ github.workspace }}/package.json
      with:
        script: |
          try {
            const pjsonLocation = process.env.PJSON_LOCATION;
            const pjson = require(`${pjsonLocation}`);
          } catch (err) {
            core.setFailed(`Unable to load package.json: ${err}`);
          }
    - name: Validate Plugin
      if: ${{ inputs.validate-plugin == 'true' }}
      uses: actions/github-script@v6
      env:
        PJSON_LOCATION: ${{ github.workspace }}/package.json
      with:
        script: |
          const pjsonLocation = process.env.PJSON_LOCATION;
          const pjson = require(pjsonLocation);
          const hasLandoKeyword = Array.isArray(pjson.keywords) && (pjson.keywords.includes('lando') || pjson.keywords.includes('lando-plugin'));
          if (hasLandoKeyword) {
            // Add in GitHub output https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
            core.info('Confirmed this is a Lando plugin.')
            process.exit(0);
          } else {
            core.setFailed('Invalid Lando plugin; required keywords not detected in package.json.');
          }
    - name: Install Dependencies
      shell: bash 
      run: |
        yarn install -g bundle-dependencies@1.0.2
        yarn install -g version-bump-prompt@6.1.0
    - name: Checkout Code
      shell: bash 
      run: |
        git fetch --unshallow && git fetch --all
        git config user.name ${{ inputs.git-username }}
        git config user.email ${{ inputs.git-email }}
        git checkout ${{ github.event.release.target_commitish }}
    - name: Bundle dependencies
      shell: bash 
      if: ${{ inputs.bundle-deps == 'true' }}
      run: |
        yarn run bundle-dependencies update
    - name: Bump Version and Push 
      shell: bash 
      run: |
        yarn run bump "${{ github.event.release.tag_name }}" --commit
        git push origin ${{ github.event.release.target_commitish }}
    - name: Retag Release
      shell: bash 
      run: |
        TAGS=${{ inputs.tags }}
        IFS=',' read -ra TAG_ARRAY <<< "$TAGS"

        for tag in "${TAG_ARRAY[@]}"; do
          git tag -f ${{ github.event.release.tag_name }} $(git log --pretty=format:'%h' -n 1)
          git push --force origin ${{ github.event.release.tag_name }}
        done
    - name: Output
      shell: bash 
      run: |
        echo "Bumped package version to ${{ github.event.release.tag_name }} with the following bundled dependencies:"
        yarn run bundle-dependencies list-bundled-dependencies